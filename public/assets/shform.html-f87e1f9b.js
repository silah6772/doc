import{_ as e,p as a,q as s,a1 as n}from"./framework-5866ffd3.js";const i={},l=n(`<h1 id="sh-form" tabindex="-1"><a class="header-anchor" href="#sh-form" aria-hidden="true">#</a> Sh Form</h1><p>This helps generate and manage front end forms</p><p>Inputs will be autogenerated.</p><p>Validation from laravel backend will also be handled</p><h2 id="basic-example" tabindex="-1"><a class="header-anchor" href="#basic-example" aria-hidden="true">#</a> Basic Example</h2><h4 id="import-the-component" tabindex="-1"><a class="header-anchor" href="#import-the-component" aria-hidden="true">#</a> Import the component</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ShForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@silahkosgei/sfrontend&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="using-it" tabindex="-1"><a class="header-anchor" href="#using-it" aria-hidden="true">#</a> Using it</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sh-form</span>
<span class="token attr-name">:fields</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;name&#39;,&#39;email&#39;,&#39;password&#39;]<span class="token punctuation">&quot;</span></span>
<span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>users/add<span class="token punctuation">&quot;</span></span>
<span class="token attr-name">:successCallback</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userRegistered<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Above form will generate a form with 3 fields</p><ul><li>name field</li><li>email field</li><li>password field</li></ul><p>Form component will automatically set password field to be input type password</p><h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h2><h3 id="fields" tabindex="-1"><a class="header-anchor" href="#fields" aria-hidden="true">#</a> fields</h3><ul><li><p>Type: <code>array</code></p></li><li><p>Default: <code>none</code></p></li><li><p>Details:</p><p>These are the form files, like inputs, select etc</p></li><li><p>Example: <code>[&#39;name&#39;,&#39;email&#39;]</code></p></li></ul><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action" aria-hidden="true">#</a> action</h3><ul><li><p>Type: <code>string</code></p></li><li><p>default: <code>none</code></p></li><li><p>Details:</p><p>This is the action url to the api backend where the post request will be handled</p></li><li><p>Example: <code>users/add</code></p></li></ul><h3 id="current-data" tabindex="-1"><a class="header-anchor" href="#current-data" aria-hidden="true">#</a> current-data</h3><ul><li><p>Type: <code>object</code></p></li><li><p>Default: <code>null</code></p></li><li><p>Details:</p><p>Existing form data, used mostly when editing an item. Form fields will be autofilled with data from this object. Key of the array is the input field</p></li><li><p>Example:</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:current-data=&quot;{
    email:&#39;johnss@gmail.com&#39;
 }&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="successcallback" tabindex="-1"><a class="header-anchor" href="#successcallback" aria-hidden="true">#</a> successCallback</h3><ul><li>Type: <code>function/method</code></li><li>Default: <code>none</code></li><li>Details: A method that will be invoked/called by the form when data is submitted successfully</li><li>Example: <code>:success_callback=&quot;userRegistered&quot;</code></li></ul><h3 id="labels" tabindex="-1"><a class="header-anchor" href="#labels" aria-hidden="true">#</a> labels</h3><ul><li>Type: <code>object</code></li><li>Default: <code>none</code></li><li>Details: An object that will hel change form field labels</li><li>Example:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:labels=&quot;{
            date_created: &#39;Registration Date&#39;
           }&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fill-selects" tabindex="-1"><a class="header-anchor" href="#fill-selects" aria-hidden="true">#</a> fill-selects</h3><ul><li>Type: <code>object</code></li><li>Default: <code>none</code></li><li>Details: Fill select element with select options, id will be used as option value and name will be option label displayed</li><li>Example 1 for defined select data:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:fill-selects=&quot;{
    gender: {
      data: [
          {
            id: &#39;Male&#39;,
            name: &#39;Male&#39;
          },
          {
            id: &#39;Female&#39;,
            name: &#39;Female&#39;
          }
      ]
    }
  }&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Example 2 For getting data from api backend</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:fill-selects=&quot;{
    user_id: {
      url: &#39;admin/users/list?all=1&#39;
  }&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Fill selects can also have suggestion (searchable), this will help search</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:fill-selects=&quot;{
    user_id: {
      suggests: true
      url: &#39;admin/users/list?all=1&#39;
  }&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Fill selects can also have suggestion with multi select, this will help search</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:fill-selects=&quot;{
    user_id: {
      suggests: true,
      allowMultiple: true
      url: &#39;admin/users/list?all=1&#39;
  }&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customcomponent" tabindex="-1"><a class="header-anchor" href="#customcomponent" aria-hidden="true">#</a> customComponent</h3><p>This will help you add custom component as a form element instead of using prebuilt</p><p>e.g</p><p>Import First</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> CkEditor <span class="token keyword">from</span> <span class="token string">&#39;@/lib/components/form-components/CkEditor.vue&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Use it this way in your sh-form, key is the name of</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sh-form</span>
        <span class="token attr-name">:fields</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;mail&#39;,&#39;name&#39;]<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:custom-component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{
    mail: CkEditor
      }<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:current-data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{
        email: &#39;jack@gmail.com&#39;
      }<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>auth/register<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),t=[l];function d(c,o){return a(),s("div",null,t)}const u=e(i,[["render",d],["__file","shform.html.vue"]]);export{u as default};
