import{_ as n,M as t,p as o,q as i,R as s,t as e,N as c,a1 as r}from"./framework-5866ffd3.js";const p={},d=s("h1",{id:"shuser",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#shuser","aria-hidden":"true"},"#"),e(" shUser")],-1),l=s("p",null,"This is a state management class to manage our logged in user",-1),u={href:"https://pinia.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},h=r(`<h2 id="importing" tabindex="-1"><a class="header-anchor" href="#importing" aria-hidden="true">#</a> Importing</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useUserStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@silahkosgei/sfrontend&#39;</span>

<span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You first import the store class then instantiate it to <code>userStore</code> constant</p><h2 id="using-it-in-component" tabindex="-1"><a class="header-anchor" href="#using-it-in-component" aria-hidden="true">#</a> Using it in component</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>userStore<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then you can use it in component template this way</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span>Welcome {{ user.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="setaccesstoken" tabindex="-1"><a class="header-anchor" href="#setaccesstoken" aria-hidden="true">#</a> <code>setAccessToken</code></h3><p>This is used to set access token for the logged in user.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>userStore<span class="token punctuation">.</span><span class="token function">setAccessToken</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>token<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="setuser-fetchuser" tabindex="-1"><a class="header-anchor" href="#setuser-fetchuser" aria-hidden="true">#</a> <code>setUser</code> | <code>fetchUser</code></h3><p>This gets logged in user from the backend and updates user state</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>userStore<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="logout-signout" tabindex="-1"><a class="header-anchor" href="#logout-signout" aria-hidden="true">#</a> <code>logOut</code> | <code>signOut</code></h3><p>This removes current session and logs out user. It basically empties accesstoken from locat storage and makes user state null</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>userStore<span class="token punctuation">.</span><span class="token function">logOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17);function m(g,k){const a=t("ExternalLinkIcon");return o(),i("div",null,[d,l,s("p",null,[e("It uses "),s("em",null,[s("a",u,[e("pinia"),c(a)])]),e(" for state management")]),h])}const f=n(p,[["render",m],["__file","index.html.vue"]]);export{f as default};
